// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.0
// source: query.sql

package models

import (
	"context"
)

const getCategory = `-- name: GetCategory :one
SELECT entity_id FROM business_entity
WHERE entity_id = $1
`

// 1. business_entity
func (q *Queries) GetCategory(ctx context.Context, entityID int32) (int32, error) {
	row := q.db.QueryRowContext(ctx, getCategory, entityID)
	var entity_id int32
	err := row.Scan(&entity_id)
	return entity_id, err
}

const listCategories = `-- name: ListCategories :many
SELECT entity_id FROM business_entity
ORDER BY entity_id
`

func (q *Queries) ListCategories(ctx context.Context) ([]int32, error) {
	rows, err := q.db.QueryContext(ctx, listCategories)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []int32
	for rows.Next() {
		var entity_id int32
		if err := rows.Scan(&entity_id); err != nil {
			return nil, err
		}
		items = append(items, entity_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
